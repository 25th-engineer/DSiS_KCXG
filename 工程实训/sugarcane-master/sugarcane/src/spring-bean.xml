<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:task="http://www.springframework.org/schema/task" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd">
	<description>Spring公共配置 </description>
	<!-- 配置Spring上下文的注解 -->
	<context:annotation-config />
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.one.sugarcane">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 属性文件位置 -->
	<context:property-placeholder location="classpath:*.properties" />
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.one.sugarcane.entity" />
		<property name="hibernateProperties">
			<props>
				<!-- bonecp设置 -->
				<prop key="hibernate.service.jdbc.connections.spi.provider_class">com.jolbox.bonecp.provider.BoneCPConnectionProvider</prop>
				<!-- 设置connection的空闲存活时间 -->
				<prop key="bonecp.idleMaxAgeInMinutes">240</prop>
				<!-- 设置测试connection的间隔时间 -->
				<prop key="bonecp.idleConnectionTestPeriodInMinutes">60</prop>
				<!-- 设置分区个数 -->
				<prop key="bonecp.partitionCount">3</prop>
				<!-- 设置分区中的connection增长数量 -->
				<prop key="bonecp.acquireIncrement">10</prop>
				<!-- 设置每个分区含有connection的最大个数 -->
				<prop key="bonecp.maxConnectionsPerPartition">60</prop>
				<!-- 设置每个分区含有connection的最小个数 -->
 				<prop key="bonecp.minConnectionsPerPartition">20</prop>
 				<!-- 设置statement缓存个数 -->
 				<prop key="bonecp.statementsCacheSize">50</prop>
 				<!-- 设置connection助手线程个数 -->
 				<prop key="bonecp.releaseHelperThreads">3</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.useUnicode">${hibernate.useUnicode}</prop>
				<prop key="hibernate.characterEncoding">${hibernate.characterEncoding}</prop>
				<prop key="current_session_context_class">thread</prop>
				<prop key="hibernate.connection.autocommit">true</prop>
				<prop key="hibernate.id.new_generator_mappings">false</prop>
			</props>
		</property>
	</bean>
	
	
	
</beans>